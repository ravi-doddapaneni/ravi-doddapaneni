openapi: "3.0.2"
info:
  version: 0.1.0
  title: Neobank-Retail-Profile-Service
  description: A Profile domain microservice which is responsible for profile management of the customer.
  
servers:
  - url: https://neobank-retail-profile-service.dev.gcp.io
    description: Development Environment
  - url: https://neobank-retail-profile-service.test.gcp.io
    description: Test Environment

security:
  - bearerAuth: []

paths:
  /api/v1/profiles:
    get:
      description: |
        A sample endpoint which returns all profiles in the bank that the user has access to.
      operationId: getProfiles
      parameters:
        - in: header
          name: Correlation-ID
          description: An ID generated by API Gateway which is propogated to the downstream services
          schema:
            type: string
            format: uuid
        - in: header
          name: Session-ID
          description: An ID generated by the mobile app which is propogated to the downstream services
          schema:
            type: string
            format: uuid
        - in: header
          name: Channel-ID
          schema:
            type: string
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          $ref: '#/components/responses/OkArray'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/profiles/{id}:
    get:
      description: Returns the profile details based on a valid customer ID
      operationId: getProfileById
      parameters:
        - in: header
          name: Correlation-ID
          description: An ID generated by API Gateway which is propogated to the downstream services
          schema:
            type: string
            format: uuid
        - in: header
          name: Session-ID
          description: An ID generated by the mobile app which is propogated to the downstream services
          schema:
            type: string
            format: uuid
        - in: header
          name: Channel-ID
          schema:
            type: string
        - name: id
          in: path
          description: ID of the customer to fetch the profile details
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          $ref: '#/components/responses/OkSingleObject'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      description: Updates the profile of the customer based on the customer ID supplied
      operationId: updateProfileById
      parameters:
        - in: header
          name: Correlation-ID
          description: An ID generated by API Gateway which is propogated to the downstream services
          schema:
            type: string
            format: uuid
        - in: header
          name: Session-ID
          description: An ID generated by the mobile app which is propogated to the downstream services
          schema:
            type: string
            format: uuid
        - in: header
          name: Channel-ID
          schema:
            type: string
        - name: id
          in: path
          description: ID of the customer to update the profile details
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Profile details to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
            examples:
              profile:
                $ref: '#/components/examples/Profile'
            
      responses:
        '200':
          description: profile updated successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      
  schemas:
    Profile:
      type: object
      required:
        - id
        - firstName
        - lastName
        - gender
      properties:
        id:
          type: string
        firstName:
          type: string
          minLength: 2
          pattern: ''
        lastName:
          type: string
          minLength: 2
          pattern: ''
        gender:
          $ref: '#/components/schemas/GenderType'
        maritalStatus:
          $ref: '#/components/schemas/MaritalStatus'
        preferredCommunicationChannel:
          $ref: '#/components/schemas/CommunicationChannel'
        dateOfBirth:
          type: string
          format: date
        address:
          $ref: '#/components/schemas/Address'

    Address:
      required:
        - addressLineOne
        - street
        - postcode
      properties:
        addressLineOne:
          type: string
        street:
          type: string
        city:
          type: string
        postcode:
          type: string
        country:
          type: string
          
    GenderType:
      type: integer
      enum:
        - 1
        - 2
        - 3
      description: >
        Sort order:
         * `1` - Male
         * `2` - Female
         * `3` - Prefer not to say

    MaritalStatus:
      type: integer
      nullable: true
      enum:
        - 1
        - 2
        - 3
      description: >
        Sort order:
         * `1` - Single
         * `2` - Married
         * `3` - Divorced

    CommunicationChannel:
      type: integer
      nullable: true
      enum:
        - 1
        - 2
        - 3
        - 4
      description: >
        Sort order:
         * `1` - Email
         * `2` - Phone
         * `3` - SMS
         * `4` - Post

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
          
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: 'The specified resource was not found'
    Unauthorized:
      description: The request is unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: 'Access token is missing or invalid'
    BadRequest:
      description: The request is invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: 'The request is invalid'
    InternalServerError:
      description: Something went wrong
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 500
            message: 'Something went wrong'
    OkSingleObject:
      description: A single profile in response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Profile'
          examples:
            profile:
              $ref: '#/components/examples/Profile'
    OkArray:
      description: An array of profiles in response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Profile'
          examples:
            profile:
              $ref: '#/components/examples/Profiles'
            
              
  examples:
    Profile:
      summary: A sample profile
      value:
        id: "NB7000320"
        firstName: "Ali"
        lastName: "Reza"
        dateOfBirth: "25/03/1990"
        gender: 1
        maritalStatus: 1
        address:
          addressLineOne: "Prestige Center"
          street: "Takhassusi Street"
          city: "Riyadh"
          postcode: "12331"
          country: "Kingdom of Saudi Arabia"
    Profiles:
      summary: Sample profiles
      value:
        - id: "NB7000320"
          firstName: "Ali"
          lastName: "Reza"
          dateOfBirth: "25/03/1990"
          gender: 1
          maritalStatus: 1
          address:
            addressLineOne: "Prestige Center"
            street: "Takhassusi Street"
            city: "Riyadh"
            postcode: "12331"
            country: "Kingdom of Saudi Arabia"
        - id: "NB7000327"
          firstName: "Atif"
          lastName: "Rauf"
          dateOfBirth: "20/10/1986"
          gender: 1
          maritalStatus: 2
          address:
            addressLineOne: "Verdun Tower"
            street: "7775 King Fahd Rd"
            city: "Riyadh"
            postcode: "12212"
            country: "Kingdom of Saudi Arabia"

  